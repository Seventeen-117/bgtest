{"name": "test_multi_database_consistency[mysql]", "status": "broken", "statusDetails": {"message": "sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (2003, \"Can't connect to MySQL server on '8.133.246.113' (timed out)\")\n(Background on this error at: https://sqlalche.me/e/20/e3q8)", "trace": ".venv\\Lib\\site-packages\\pymysql\\connections.py:649: in connect\n    sock = socket.create_connection(\nC:\\Python313\\Lib\\socket.py:864: in create_connection\n    raise exceptions[0]\nC:\\Python313\\Lib\\socket.py:849: in create_connection\n    sock.connect(sa)\nE   TimeoutError: timed out\n\nDuring handling of the above exception, another exception occurred:\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:143: in __init__\n    self._dbapi_connection = engine.raw_connection()\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:3295: in raw_connection\n    return self.pool.connect()\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:447: in connect\n    return _ConnectionFairy._checkout(self)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:1264: in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:711: in checkout\n    rec = pool._do_get()\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py:177: in _do_get\n    with util.safe_reraise():\n.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py:224: in __exit__\n    raise exc_value.with_traceback(exc_tb)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py:175: in _do_get\n    return self._create_connection()\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:388: in _create_connection\n    return _ConnectionRecord(self)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:673: in __init__\n    self.__connect()\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:899: in __connect\n    with util.safe_reraise():\n.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py:224: in __exit__\n    raise exc_value.with_traceback(exc_tb)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:895: in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\create.py:646: in connect\n    return dialect.connect(*cargs, **cparams)\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py:626: in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501\n.venv\\Lib\\site-packages\\pymysql\\connections.py:361: in __init__\n    self.connect()\n.venv\\Lib\\site-packages\\pymysql\\connections.py:716: in connect\n    raise exc\nE   pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '8.133.246.113' (timed out)\")\n\nThe above exception was the direct cause of the following exception:\ntestcase\\test_orm_integration.py:184: in test_multi_database_consistency\n    result = execute_query(\"SELECT 1 as test_value\", db_type=db_type, env='test')\ncommon\\orm_manager.py:496: in execute_query\n    return db_manager.execute_query(sql, params, db_type, env)\ncommon\\orm_manager.py:217: in execute_query\n    return self.execute_raw_sql(sql, params, db_type, env)\ncommon\\orm_manager.py:198: in execute_raw_sql\n    result = session.execute(text(sql), params or {})\n.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py:2365: in execute\n    return self._execute_internal(\n.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py:2241: in _execute_internal\n    conn = self._connection_for_bind(bind)\n.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py:2110: in _connection_for_bind\n    return trans._connection_for_bind(engine, execution_options)\n<string>:2: in _connection_for_bind\n    ???\n.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py:137: in _go\n    ret_value = fn(self, *arg, **kw)\n.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py:1189: in _connection_for_bind\n    conn = bind.connect()\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:3271: in connect\n    return self._connection_cls(self)\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:145: in __init__\n    Connection._handle_dbapi_exception_noconnection(\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:2434: in _handle_dbapi_exception_noconnection\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:143: in __init__\n    self._dbapi_connection = engine.raw_connection()\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py:3295: in raw_connection\n    return self.pool.connect()\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:447: in connect\n    return _ConnectionFairy._checkout(self)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:1264: in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:711: in checkout\n    rec = pool._do_get()\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py:177: in _do_get\n    with util.safe_reraise():\n.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py:224: in __exit__\n    raise exc_value.with_traceback(exc_tb)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py:175: in _do_get\n    return self._create_connection()\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:388: in _create_connection\n    return _ConnectionRecord(self)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:673: in __init__\n    self.__connect()\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:899: in __connect\n    with util.safe_reraise():\n.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py:224: in __exit__\n    raise exc_value.with_traceback(exc_tb)\n.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py:895: in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\create.py:646: in connect\n    return dialect.connect(*cargs, **cparams)\n.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py:626: in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501\n.venv\\Lib\\site-packages\\pymysql\\connections.py:361: in __init__\n    self.connect()\n.venv\\Lib\\site-packages\\pymysql\\connections.py:716: in connect\n    raise exc\nE   sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (2003, \"Can't connect to MySQL server on '8.133.246.113' (timed out)\")\nE   (Background on this error at: https://sqlalche.me/e/20/e3q8)"}, "description": "测试多数据库数据一致性", "steps": [{"name": "测试设置: TestDatabaseIntegration.test_multi_database_consistency[mysql]", "status": "passed", "start": 1754201545370, "stop": 1754201545385}, {"name": "测试用例: 多数据库数据一致性测试", "status": "broken", "statusDetails": {"message": "sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (2003, \"Can't connect to MySQL server on '8.133.246.113' (timed out)\")\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\n", "trace": "  File \"E:\\bgtest\\utils\\allure_decorators.py\", line 31, in wrapper\n    result = func(*args, **kwargs)\n  File \"E:\\bgtest\\utils\\test_decorators.py\", line 29, in wrapper\n    return func(*args, **kwargs)\n  File \"E:\\bgtest\\utils\\test_decorators.py\", line 286, in wrapper\n    return func(*args, **kwargs)\n  File \"E:\\bgtest\\utils\\test_decorators.py\", line 300, in wrapper\n    return func(*args, **kwargs)\n  File \"E:\\bgtest\\testcase\\test_orm_integration.py\", line 184, in test_multi_database_consistency\n    result = execute_query(\"SELECT 1 as test_value\", db_type=db_type, env='test')\n  File \"E:\\bgtest\\common\\orm_manager.py\", line 496, in execute_query\n    return db_manager.execute_query(sql, params, db_type, env)\n           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\bgtest\\common\\orm_manager.py\", line 217, in execute_query\n    return self.execute_raw_sql(sql, params, db_type, env)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\bgtest\\common\\orm_manager.py\", line 198, in execute_raw_sql\n    result = session.execute(text(sql), params or {})\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2365, in execute\n    return self._execute_internal(\n           ~~~~~~~~~~~~~~~~~~~~~~^\n        statement,\n        ^^^^^^^^^^\n    ...<4 lines>...\n        _add_event=_add_event,\n        ^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2241, in _execute_internal\n    conn = self._connection_for_bind(bind)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2110, in _connection_for_bind\n    return trans._connection_for_bind(engine, execution_options)\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 2, in _connection_for_bind\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 137, in _go\n    ret_value = fn(self, *arg, **kw)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1189, in _connection_for_bind\n    conn = bind.connect()\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3271, in connect\n    return self._connection_cls(self)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 145, in __init__\n    Connection._handle_dbapi_exception_noconnection(\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n        err, dialect, engine\n        ^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2434, in _handle_dbapi_exception_noconnection\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 143, in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ~~~~~~~~~~~~~~~~~~~~~^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3295, in raw_connection\n    return self.pool.connect()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 447, in connect\n    return _ConnectionFairy._checkout(self)\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 1264, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 711, in checkout\n    rec = pool._do_get()\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 177, in _do_get\n    with util.safe_reraise():\n         ~~~~~~~~~~~~~~~~~^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 175, in _do_get\n    return self._create_connection()\n           ~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 388, in _create_connection\n    return _ConnectionRecord(self)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 673, in __init__\n    self.__connect()\n    ~~~~~~~~~~~~~~^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 899, in __connect\n    with util.safe_reraise():\n         ~~~~~~~~~~~~~~~~~^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 895, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ~~~~~~~~~~~~~~~~~~~~^^^^^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\create.py\", line 646, in connect\n    return dialect.connect(*cargs, **cparams)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 626, in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501\n           ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\pymysql\\connections.py\", line 361, in __init__\n    self.connect()\n    ~~~~~~~~~~~~^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\pymysql\\connections.py\", line 716, in connect\n    raise exc\n"}, "steps": [{"name": "在 mysql 数据库中执行测试", "status": "broken", "statusDetails": {"message": "sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (2003, \"Can't connect to MySQL server on '8.133.246.113' (timed out)\")\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\n", "trace": "  File \"E:\\bgtest\\testcase\\test_orm_integration.py\", line 184, in test_multi_database_consistency\n    result = execute_query(\"SELECT 1 as test_value\", db_type=db_type, env='test')\n  File \"E:\\bgtest\\common\\orm_manager.py\", line 496, in execute_query\n    return db_manager.execute_query(sql, params, db_type, env)\n           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\bgtest\\common\\orm_manager.py\", line 217, in execute_query\n    return self.execute_raw_sql(sql, params, db_type, env)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\bgtest\\common\\orm_manager.py\", line 198, in execute_raw_sql\n    result = session.execute(text(sql), params or {})\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2365, in execute\n    return self._execute_internal(\n           ~~~~~~~~~~~~~~~~~~~~~~^\n        statement,\n        ^^^^^^^^^^\n    ...<4 lines>...\n        _add_event=_add_event,\n        ^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2241, in _execute_internal\n    conn = self._connection_for_bind(bind)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2110, in _connection_for_bind\n    return trans._connection_for_bind(engine, execution_options)\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 2, in _connection_for_bind\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 137, in _go\n    ret_value = fn(self, *arg, **kw)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1189, in _connection_for_bind\n    conn = bind.connect()\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3271, in connect\n    return self._connection_cls(self)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 145, in __init__\n    Connection._handle_dbapi_exception_noconnection(\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n        err, dialect, engine\n        ^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2434, in _handle_dbapi_exception_noconnection\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 143, in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ~~~~~~~~~~~~~~~~~~~~~^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3295, in raw_connection\n    return self.pool.connect()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 447, in connect\n    return _ConnectionFairy._checkout(self)\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 1264, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 711, in checkout\n    rec = pool._do_get()\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 177, in _do_get\n    with util.safe_reraise():\n         ~~~~~~~~~~~~~~~~~^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 175, in _do_get\n    return self._create_connection()\n           ~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 388, in _create_connection\n    return _ConnectionRecord(self)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 673, in __init__\n    self.__connect()\n    ~~~~~~~~~~~~~~^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 899, in __connect\n    with util.safe_reraise():\n         ~~~~~~~~~~~~~~~~~^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 895, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ~~~~~~~~~~~~~~~~~~~~^^^^^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\create.py\", line 646, in connect\n    return dialect.connect(*cargs, **cparams)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 626, in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501\n           ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\pymysql\\connections.py\", line 361, in __init__\n    self.connect()\n    ~~~~~~~~~~~~^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\pymysql\\connections.py\", line 716, in connect\n    raise exc\n"}, "start": 1754201545389, "stop": 1754201555398}], "attachments": [{"name": "测试用例异常: 多数据库数据一致性测试", "source": "7be8d8ad-91b0-4fc3-9e70-5b0762ecce14-attachment.json", "type": "application/json"}], "start": 1754201545389, "stop": 1754201555425}, {"name": "测试清理: TestDatabaseIntegration.test_multi_database_consistency[mysql]", "status": "passed", "start": 1754201557967, "stop": 1754201557979}], "attachments": [{"name": "测试异常", "source": "f2c2f319-70eb-4742-9ad6-9938eae2b770-attachment.json", "type": "application/json"}, {"name": "异常堆栈", "source": "38d44a61-cbfb-44af-bc06-4f605cccbe29-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "620260b8-0136-46eb-a288-07fb8ab48e16-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "db_type", "value": "'mysql'"}], "start": 1754201545389, "stop": 1754201555438, "uuid": "433dddde-7aca-4141-b6ab-c35fd9798c25", "historyId": "ee777bbcad544834aea460fb8062e053", "testCaseId": "576b2a38f0a30a5214d7ce1c0b52b9bb", "fullName": "testcase.test_orm_integration.TestDatabaseIntegration#test_multi_database_consistency", "labels": [{"name": "feature", "value": "数据库"}, {"name": "story", "value": "数据一致性"}, {"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_orm_integration"}, {"name": "subSuite", "value": "TestDatabaseIntegration"}, {"name": "host", "value": "Ly0217"}, {"name": "thread", "value": "231192-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_orm_integration"}], "titlePath": ["testcase", "test_orm_integration.py", "TestDatabaseIntegration"]}