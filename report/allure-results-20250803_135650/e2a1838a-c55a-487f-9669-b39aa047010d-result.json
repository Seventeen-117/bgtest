{"name": "test_clean_db_fixture", "status": "broken", "statusDetails": {"message": "sqlalchemy.exc.ArgumentError: Textual SQL expression 'SELECT COUNT(*) as count ...' should be explicitly declared as text('SELECT COUNT(*) as count ...')", "trace": "testcase\\test_orm_integration.py:287: in test_clean_db_fixture\n    result = clean_db.execute(\"SELECT COUNT(*) as count FROM test_table WHERE name LIKE 'test_%'\")\n.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py:2365: in execute\n    return self._execute_internal(\n.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py:2149: in _execute_internal\n    statement = coercions.expect(roles.StatementRole, statement)\n.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py:395: in expect\n    resolved = impl._literal_coercion(\n.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py:621: in _literal_coercion\n    return self._text_coercion(element, argname, **kw)\n.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py:614: in _text_coercion\n    return _no_text_coercion(element, argname)\n.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py:584: in _no_text_coercion\n    raise exc_cls(\nE   sqlalchemy.exc.ArgumentError: Textual SQL expression 'SELECT COUNT(*) as count ...' should be explicitly declared as text('SELECT COUNT(*) as count ...')"}, "description": "测试数据库清理fixture", "steps": [{"name": "测试设置: TestDatabaseFixtures.test_clean_db_fixture", "status": "passed", "start": 1754201562757, "stop": 1754201562770}, {"name": "测试用例: 数据库清理测试", "status": "broken", "statusDetails": {"message": "sqlalchemy.exc.ArgumentError: Textual SQL expression 'SELECT COUNT(*) as count ...' should be explicitly declared as text('SELECT COUNT(*) as count ...')\n", "trace": "  File \"E:\\bgtest\\utils\\allure_decorators.py\", line 31, in wrapper\n    result = func(*args, **kwargs)\n  File \"E:\\bgtest\\utils\\test_decorators.py\", line 29, in wrapper\n    return func(*args, **kwargs)\n  File \"E:\\bgtest\\utils\\test_decorators.py\", line 286, in wrapper\n    return func(*args, **kwargs)\n  File \"E:\\bgtest\\utils\\test_decorators.py\", line 300, in wrapper\n    return func(*args, **kwargs)\n  File \"E:\\bgtest\\testcase\\test_orm_integration.py\", line 287, in test_clean_db_fixture\n    result = clean_db.execute(\"SELECT COUNT(*) as count FROM test_table WHERE name LIKE 'test_%'\")\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2365, in execute\n    return self._execute_internal(\n           ~~~~~~~~~~~~~~~~~~~~~~^\n        statement,\n        ^^^^^^^^^^\n    ...<4 lines>...\n        _add_event=_add_event,\n        ^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2149, in _execute_internal\n    statement = coercions.expect(roles.StatementRole, statement)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py\", line 395, in expect\n    resolved = impl._literal_coercion(\n        element, argname=argname, **kw\n    )\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py\", line 621, in _literal_coercion\n    return self._text_coercion(element, argname, **kw)\n           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py\", line 614, in _text_coercion\n    return _no_text_coercion(element, argname)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py\", line 584, in _no_text_coercion\n    raise exc_cls(\n    ...<7 lines>...\n    ) from err\n"}, "attachments": [{"name": "测试用例异常: 数据库清理测试", "source": "2037baae-ce15-4241-afb4-cc9afc3670a4-attachment.json", "type": "application/json"}], "start": 1754201562775, "stop": 1754201562783}, {"name": "测试清理: TestDatabaseFixtures.test_clean_db_fixture", "status": "passed", "start": 1754201563270, "stop": 1754201563283}], "attachments": [{"name": "测试异常", "source": "8bb6763a-0467-4706-a65a-92614dd36c99-attachment.json", "type": "application/json"}, {"name": "异常堆栈", "source": "136cbfa3-c1f2-4d0e-9026-fa6ddfa0f4b6-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "c1c4daad-0e99-4eee-bc9f-bb0dce44f41d-attachment.txt", "type": "text/plain"}], "start": 1754201562774, "stop": 1754201562790, "uuid": "c72c41de-0135-4cca-9dd9-2d1393e5ed24", "historyId": "a75375609096297b9fdd241689758fe5", "testCaseId": "a75375609096297b9fdd241689758fe5", "fullName": "testcase.test_orm_integration.TestDatabaseFixtures#test_clean_db_fixture", "labels": [{"name": "feature", "value": "Fixtures"}, {"name": "severity", "value": "normal"}, {"name": "story", "value": "数据清理"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_orm_integration"}, {"name": "subSuite", "value": "TestDatabaseFixtures"}, {"name": "host", "value": "Ly0217"}, {"name": "thread", "value": "231192-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_orm_integration"}], "titlePath": ["testcase", "test_orm_integration.py", "TestDatabaseFixtures"]}