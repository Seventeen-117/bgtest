{"name": "test_parameterized_database[postgresql]", "status": "broken", "statusDetails": {"message": "sqlalchemy.exc.ArgumentError: Textual SQL expression 'SELECT 1 as test' should be explicitly declared as text('SELECT 1 as test')", "trace": "testcase\\test_orm_integration.py:309: in test_parameterized_database\n    result = session.execute(\"SELECT 1 as test\")\n.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py:2365: in execute\n    return self._execute_internal(\n.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py:2149: in _execute_internal\n    statement = coercions.expect(roles.StatementRole, statement)\n.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py:395: in expect\n    resolved = impl._literal_coercion(\n.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py:621: in _literal_coercion\n    return self._text_coercion(element, argname, **kw)\n.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py:614: in _text_coercion\n    return _no_text_coercion(element, argname)\n.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py:584: in _no_text_coercion\n    raise exc_cls(\nE   sqlalchemy.exc.ArgumentError: Textual SQL expression 'SELECT 1 as test' should be explicitly declared as text('SELECT 1 as test')"}, "description": "参数化数据库测试", "steps": [{"name": "测试设置: Unknown.test_parameterized_database[postgresql]", "status": "passed", "start": 1754201563864, "stop": 1754201563874}, {"name": "测试用例: 参数化数据库测试", "status": "broken", "statusDetails": {"message": "sqlalchemy.exc.ArgumentError: Textual SQL expression 'SELECT 1 as test' should be explicitly declared as text('SELECT 1 as test')\n", "trace": "  File \"E:\\bgtest\\utils\\allure_decorators.py\", line 31, in wrapper\n    result = func(*args, **kwargs)\n  File \"E:\\bgtest\\utils\\test_decorators.py\", line 29, in wrapper\n    return func(*args, **kwargs)\n  File \"E:\\bgtest\\utils\\test_decorators.py\", line 286, in wrapper\n    return func(*args, **kwargs)\n  File \"E:\\bgtest\\utils\\test_decorators.py\", line 300, in wrapper\n    return func(*args, **kwargs)\n  File \"E:\\bgtest\\testcase\\test_orm_integration.py\", line 309, in test_parameterized_database\n    result = session.execute(\"SELECT 1 as test\")\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2365, in execute\n    return self._execute_internal(\n           ~~~~~~~~~~~~~~~~~~~~~~^\n        statement,\n        ^^^^^^^^^^\n    ...<4 lines>...\n        _add_event=_add_event,\n        ^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2149, in _execute_internal\n    statement = coercions.expect(roles.StatementRole, statement)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py\", line 395, in expect\n    resolved = impl._literal_coercion(\n        element, argname=argname, **kw\n    )\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py\", line 621, in _literal_coercion\n    return self._text_coercion(element, argname, **kw)\n           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py\", line 614, in _text_coercion\n    return _no_text_coercion(element, argname)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py\", line 584, in _no_text_coercion\n    raise exc_cls(\n    ...<7 lines>...\n    ) from err\n"}, "steps": [{"name": "在 postgresql 数据库中执行测试", "status": "broken", "statusDetails": {"message": "sqlalchemy.exc.ArgumentError: Textual SQL expression 'SELECT 1 as test' should be explicitly declared as text('SELECT 1 as test')\n", "trace": "  File \"E:\\bgtest\\testcase\\test_orm_integration.py\", line 309, in test_parameterized_database\n    result = session.execute(\"SELECT 1 as test\")\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2365, in execute\n    return self._execute_internal(\n           ~~~~~~~~~~~~~~~~~~~~~~^\n        statement,\n        ^^^^^^^^^^\n    ...<4 lines>...\n        _add_event=_add_event,\n        ^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2149, in _execute_internal\n    statement = coercions.expect(roles.StatementRole, statement)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py\", line 395, in expect\n    resolved = impl._literal_coercion(\n        element, argname=argname, **kw\n    )\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py\", line 621, in _literal_coercion\n    return self._text_coercion(element, argname, **kw)\n           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py\", line 614, in _text_coercion\n    return _no_text_coercion(element, argname)\n  File \"E:\\bgtest\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\coercions.py\", line 584, in _no_text_coercion\n    raise exc_cls(\n    ...<7 lines>...\n    ) from err\n"}, "start": 1754201563878, "stop": 1754201563879}], "attachments": [{"name": "测试用例异常: 参数化数据库测试", "source": "06833a29-a77c-4e3d-8785-b8d4cef1aeb7-attachment.json", "type": "application/json"}], "start": 1754201563878, "stop": 1754201563889}, {"name": "测试清理: Unknown.test_parameterized_database[postgresql]", "status": "passed", "start": 1754201564421, "stop": 1754201564431}], "attachments": [{"name": "测试异常", "source": "2ce44e5c-7ccb-4308-91dc-d34ceef3f547-attachment.json", "type": "application/json"}, {"name": "异常堆栈", "source": "c13029a5-523a-4746-ac4c-99fcc5ceb375-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "296dd1ff-032a-4fa6-93c2-99becdcd118d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "db_environment", "value": "'postgresql'"}], "start": 1754201563877, "stop": 1754201563895, "uuid": "c8f1953e-e377-421f-b330-74194c2be408", "historyId": "3aa444a0e22184174447663c932cdeab", "testCaseId": "311897995e2c2952e01664e23c4dc334", "fullName": "testcase.test_orm_integration#test_parameterized_database", "labels": [{"name": "story", "value": "参数化测试"}, {"name": "feature", "value": "数据库"}, {"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_orm_integration"}, {"name": "host", "value": "Ly0217"}, {"name": "thread", "value": "231192-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_orm_integration"}], "titlePath": ["testcase", "test_orm_integration.py"]}