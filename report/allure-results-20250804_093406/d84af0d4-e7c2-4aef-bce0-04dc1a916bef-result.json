{"name": "test_multi_database_consistency[postgresql]", "status": "broken", "statusDetails": {"message": "Exception: 无法获取数据库会话: postgresql - test", "trace": "testcase\\test_orm_integration.py:184: in test_multi_database_consistency\n    result = execute_query(\"SELECT 1 as test_value\", db_type=db_type, env='test')\ncommon\\orm_manager.py:496: in execute_query\n    return db_manager.execute_query(sql, params, db_type, env)\ncommon\\orm_manager.py:217: in execute_query\n    return self.execute_raw_sql(sql, params, db_type, env)\ncommon\\orm_manager.py:196: in execute_raw_sql\n    with self.get_session_context(db_type, env) as session:\n..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\contextlib.py:113: in __enter__\n    return next(self.gen)\ncommon\\orm_manager.py:138: in get_session_context\n    raise Exception(f\"无法获取数据库会话: {db_type} - {env}\")\nE   Exception: 无法获取数据库会话: postgresql - test"}, "description": "测试多数据库数据一致性", "steps": [{"name": "测试设置: TestDatabaseIntegration.test_multi_database_consistency[postgresql]", "status": "passed", "start": 1754271682734, "stop": 1754271682735}, {"name": "测试用例: 多数据库数据一致性测试", "status": "broken", "statusDetails": {"message": "Exception: 无法获取数据库会话: postgresql - test\n", "trace": "  File \"C:\\Users\\sy_li\\bgtest\\utils\\allure_decorators.py\", line 31, in wrapper\n    result = func(*args, **kwargs)\n  File \"C:\\Users\\sy_li\\bgtest\\utils\\test_decorators.py\", line 29, in wrapper\n    return func(*args, **kwargs)\n  File \"C:\\Users\\sy_li\\bgtest\\utils\\test_decorators.py\", line 286, in wrapper\n    return func(*args, **kwargs)\n  File \"C:\\Users\\sy_li\\bgtest\\utils\\test_decorators.py\", line 300, in wrapper\n    return func(*args, **kwargs)\n  File \"C:\\Users\\sy_li\\bgtest\\testcase\\test_orm_integration.py\", line 184, in test_multi_database_consistency\n    result = execute_query(\"SELECT 1 as test_value\", db_type=db_type, env='test')\n  File \"C:\\Users\\sy_li\\bgtest\\common\\orm_manager.py\", line 496, in execute_query\n    return db_manager.execute_query(sql, params, db_type, env)\n  File \"C:\\Users\\sy_li\\bgtest\\common\\orm_manager.py\", line 217, in execute_query\n    return self.execute_raw_sql(sql, params, db_type, env)\n  File \"C:\\Users\\sy_li\\bgtest\\common\\orm_manager.py\", line 196, in execute_raw_sql\n    with self.get_session_context(db_type, env) as session:\n  File \"C:\\Users\\sy_li\\AppData\\Local\\Programs\\Python\\Python38\\lib\\contextlib.py\", line 113, in __enter__\n    return next(self.gen)\n  File \"C:\\Users\\sy_li\\bgtest\\common\\orm_manager.py\", line 138, in get_session_context\n    raise Exception(f\"无法获取数据库会话: {db_type} - {env}\")\n"}, "steps": [{"name": "在 postgresql 数据库中执行测试", "status": "broken", "statusDetails": {"message": "Exception: 无法获取数据库会话: postgresql - test\n", "trace": "  File \"C:\\Users\\sy_li\\bgtest\\testcase\\test_orm_integration.py\", line 184, in test_multi_database_consistency\n    result = execute_query(\"SELECT 1 as test_value\", db_type=db_type, env='test')\n  File \"C:\\Users\\sy_li\\bgtest\\common\\orm_manager.py\", line 496, in execute_query\n    return db_manager.execute_query(sql, params, db_type, env)\n  File \"C:\\Users\\sy_li\\bgtest\\common\\orm_manager.py\", line 217, in execute_query\n    return self.execute_raw_sql(sql, params, db_type, env)\n  File \"C:\\Users\\sy_li\\bgtest\\common\\orm_manager.py\", line 196, in execute_raw_sql\n    with self.get_session_context(db_type, env) as session:\n  File \"C:\\Users\\sy_li\\AppData\\Local\\Programs\\Python\\Python38\\lib\\contextlib.py\", line 113, in __enter__\n    return next(self.gen)\n  File \"C:\\Users\\sy_li\\bgtest\\common\\orm_manager.py\", line 138, in get_session_context\n    raise Exception(f\"无法获取数据库会话: {db_type} - {env}\")\n"}, "start": 1754271682735, "stop": 1754271682736}], "attachments": [{"name": "测试用例异常: 多数据库数据一致性测试", "source": "4c94ed51-f46e-4b41-a500-2f34967a73c8-attachment.json", "type": "application/json"}], "start": 1754271682735, "stop": 1754271682741}, {"name": "测试清理: TestDatabaseIntegration.test_multi_database_consistency[postgresql]", "status": "passed", "start": 1754271682787, "stop": 1754271682793}], "attachments": [{"name": "测试异常", "source": "3d62410f-ceed-4533-928b-dea2acc7fcd1-attachment.json", "type": "application/json"}, {"name": "异常堆栈", "source": "d680259c-ea0d-4462-9ffe-aad670294434-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "739e0439-abd4-407c-929b-c475c4fcb2a9-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "db_type", "value": "'postgresql'"}], "start": 1754271682735, "stop": 1754271682741, "uuid": "39c06c27-57f1-4eb7-9641-8cee495a3702", "historyId": "640b9820a82bdbba66f89d7333be5ed6", "testCaseId": "576b2a38f0a30a5214d7ce1c0b52b9bb", "fullName": "testcase.test_orm_integration.TestDatabaseIntegration#test_multi_database_consistency", "labels": [{"name": "feature", "value": "数据库"}, {"name": "story", "value": "数据一致性"}, {"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_orm_integration"}, {"name": "subSuite", "value": "TestDatabaseIntegration"}, {"name": "host", "value": "lihaojie"}, {"name": "thread", "value": "89128-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_orm_integration"}], "titlePath": ["testcase", "test_orm_integration.py", "TestDatabaseIntegration"]}