{
  "exception_type": "Exception",
  "exception_message": "无法获取数据库会话: postgresql - test",
  "traceback": "Traceback (most recent call last):\n  File \"C:\\Users\\sy_li\\bgtest\\utils\\allure_decorators.py\", line 31, in wrapper\n    result = func(*args, **kwargs)\n  File \"C:\\Users\\sy_li\\bgtest\\utils\\test_decorators.py\", line 29, in wrapper\n    return func(*args, **kwargs)\n  File \"C:\\Users\\sy_li\\bgtest\\utils\\test_decorators.py\", line 286, in wrapper\n    return func(*args, **kwargs)\n  File \"C:\\Users\\sy_li\\bgtest\\utils\\test_decorators.py\", line 300, in wrapper\n    return func(*args, **kwargs)\n  File \"C:\\Users\\sy_li\\bgtest\\testcase\\test_orm_integration.py\", line 184, in test_multi_database_consistency\n    result = execute_query(\"SELECT 1 as test_value\", db_type=db_type, env='test')\n  File \"C:\\Users\\sy_li\\bgtest\\common\\orm_manager.py\", line 496, in execute_query\n    return db_manager.execute_query(sql, params, db_type, env)\n  File \"C:\\Users\\sy_li\\bgtest\\common\\orm_manager.py\", line 217, in execute_query\n    return self.execute_raw_sql(sql, params, db_type, env)\n  File \"C:\\Users\\sy_li\\bgtest\\common\\orm_manager.py\", line 196, in execute_raw_sql\n    with self.get_session_context(db_type, env) as session:\n  File \"C:\\Users\\sy_li\\AppData\\Local\\Programs\\Python\\Python38\\lib\\contextlib.py\", line 113, in __enter__\n    return next(self.gen)\n  File \"C:\\Users\\sy_li\\bgtest\\common\\orm_manager.py\", line 138, in get_session_context\n    raise Exception(f\"无法获取数据库会话: {db_type} - {env}\")\nException: 无法获取数据库会话: postgresql - test\n"
}